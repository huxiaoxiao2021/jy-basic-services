<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jdl.basic.provider.core.dao.workStation.SiteAttendPlanDao" >
    <resultMap id="resultMap" type="com.jdl.basic.api.domain.workStation.SiteAttendPlan">
        <id column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="plan_attend_time" property="planAttendTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="org_code" property="orgCode" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="org_name" property="orgName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="site_code" property="siteCode" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="site_name" property="siteName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="business_line_code" property="businessLineCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="business_line_name" property="businessLineName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="wave_code" property="waveCode" javaType="java.lang.Integer" jdbcType="TINYINT"/>
        <result column="job_type" property="jobType" javaType="java.lang.Integer" jdbcType="TINYINT"/>
        <result column="plan_attend_num" property="planAttendNum" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="status" property="status" javaType="java.lang.Integer" jdbcType="TINYINT"/>
        <result column="create_user" property="createUser" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="create_user_name" property="createUserName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="confirm_user" property="confirmUser" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="confirm_user_name" property="confirmUserName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="confirm_time" property="confirmTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="update_user_name" property="updateUserName" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="version_num" property="versionNum" javaType="java.lang.Integer" jdbcType="TINYINT"/>
        <result column="yn" property="yn" javaType="java.lang.Integer" jdbcType="TINYINT"/>
        <result column="ts" property="ts" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="baseColumnList">
        s.id, s.plan_attend_time, s.org_code, s.org_name, s.site_code, s.site_name, s.business_line_code,
        s.business_line_name, s.wave_code, s.job_type, s.plan_attend_num, s.status, s.create_user, s.create_user_name, s.create_time, s.confirm_user,
        s.confirm_user_name, s.confirm_time, s.update_user, s.update_user_name, s.update_time, s.version_num, s.yn, s.ts
    </sql>

    <sql id="queryCondition">
        <where>
            s.yn = 1
            <if test="startTime != null">
                and plan_attend_time <![CDATA[ >= ]]> #{startTime, jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null">
                and plan_attend_time <![CDATA[ <= ]]> #{endTime, jdbcType=TIMESTAMP}
            </if>
            <if test="orgCode != null">
                and org_code = #{orgCode, jdbcType=INTEGER}
            </if>
            <if test="siteCode != null">
                and site_code = #{siteCode, jdbcType=INTEGER}
            </if>
            <if test="status != null">
                and status = #{status, jdbcType=TINYINT}
            </if>
        </where>
    </sql>
    
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into site_attend_plan
            (
                 plan_attend_time,
                 org_code,
                 org_name,
                 site_code,
                 site_name,
                 business_line_code,
                 business_line_name,
                 wave_code,
                 job_type,
                 plan_attend_num,
                 create_user,
                 create_user_name,
                 create_time,
                 update_user,
                 update_user_name,
                 update_time,
                 version_num
            )
        values
        <foreach collection="list" item="item" separator=",">
            (
                #{item.planAttendTime, jdbcType=TIMESTAMP},
                #{item.orgCode, jdbcType=INTEGER},
                #{item.orgName, jdbcType=VARCHAR},
                #{item.siteCode, jdbcType=INTEGER},
                #{item.siteName, jdbcType=VARCHAR},
                #{item.businessLineCode, jdbcType=VARCHAR},
                #{item.businessLineName, jdbcType=VARCHAR},
                #{item.waveCode, jdbcType=TINYINT},
                #{item.jobType, jdbcType=TINYINT},
                #{item.planAttendNum, jdbcType=INTEGER},
                #{item.createUser, jdbcType=VARCHAR},
                #{item.createUserName, jdbcType=VARCHAR},
                #{item.createTime, jdbcType=TIMESTAMP},
                #{item.updateUser, jdbcType=VARCHAR},
                #{item.updateUserName, jdbcType=VARCHAR},
                #{item.updateTime, jdbcType=TIMESTAMP},
                #{item.versionNum, jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <select id="queryOldDataByBusinessKey" parameterType="com.jdl.basic.api.domain.workStation.SiteAttendPlan" resultMap="resultMap">
        select
            <include refid="baseColumnList"/>
        from
            site_attend_plan s
        where
            s.yn = 1 and
            plan_attend_time = #{planAttendTime, jdbcType=TIMESTAMP} and
            org_code = #{orgCode, jdbcType=INTEGER} and
            site_code = #{siteCode, jdbcType=INTEGER}
        group by
            s.plan_attend_time, s.org_code, s.site_code
    </select>

    <update id="deleteOldDataByBusinessKey" parameterType="com.jdl.basic.api.domain.workStation.SiteAttendPlan">
        update
            site_attend_plan s
        set
            s.update_user = #{updateUser, jdbcType=VARCHAR},
            s.update_user_name = #{updateUserName, jdbcType=VARCHAR},
            s.update_time = #{updateTime, jdbcType=TIMESTAMP},
            s.yn = 0
        where
            s.yn = 1 and
            plan_attend_time = #{planAttendTime, jdbcType=TIMESTAMP} and
            org_code = #{orgCode, jdbcType=INTEGER} and
            site_code = #{siteCode, jdbcType=INTEGER}
    </update>

    <select id="queryTotalCount" parameterType="com.jdl.basic.api.domain.workStation.SiteAttendPlanQuery" resultType="java.lang.Long">
        select
            count(*)
        from
            site_attend_plan s
        <include refid="queryCondition"/>
        group by
            s.plan_attend_time, s.org_code, s.site_code
    </select>

    <select id="queryPageList" parameterType="com.jdl.basic.api.domain.workStation.SiteAttendPlanQuery" resultMap="resultMap">
        select
            <include refid="baseColumnList"/>
        from
            site_attend_plan s
        <include refid="queryCondition"/>
        group by
            s.plan_attend_time, s.org_code, s.site_code
        <if test="pageNumber > 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryPageDetail" parameterType="com.jdl.basic.api.domain.workStation.SiteAttendPlan" resultMap="resultMap">
        select
            <include refid="baseColumnList"/>
        from
            site_attend_plan s
        where
            s.yn = 1 and
            s.plan_attend_time = #{planAttendTime, jdbcType=TIMESTAMP} and
            s.org_code = #{orgCode, jdbcType=INTEGER} and
            s.site_code = #{siteCode, jdbcType=INTEGER}
    </select>

    <update id="confirmOneRecord" parameterType="com.jdl.basic.api.domain.workStation.SiteAttendPlan">
        update
            site_attend_plan s
        set
            s.status = 1,
            s.confirm_user = #{confirmUser, jdbcType=VARCHAR},
            s.confirm_user_name = #{confirmUserName, jdbcType=VARCHAR},
            s.confirm_time = #{confirmTime, jdbcType=TIMESTAMP},
            s.update_user = #{updateUser, jdbcType=VARCHAR},
            s.update_user_name = #{updateUserName, jdbcType=VARCHAR},
            s.update_time = #{updateTime, jdbcType=TIMESTAMP}
        where
            s.yn = 1 and
            s.status = 0 and
            s.plan_attend_time = #{planAttendTime, jdbcType=TIMESTAMP} and
            s.org_code = #{orgCode, jdbcType=INTEGER} and
            s.site_code = #{siteCode, jdbcType=INTEGER}
    </update>
</mapper>
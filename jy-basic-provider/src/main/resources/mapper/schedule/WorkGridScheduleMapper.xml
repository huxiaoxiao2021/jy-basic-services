<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdl.basic.provider.core.dao.schedule.WorkGridScheduleDao">
  <resultMap id="BaseResultMap" type="com.jdl.basic.api.domain.schedule.WorkGridSchedule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="work_grid_key" jdbcType="VARCHAR" property="workGridKey" />
    <result column="schedule_no" jdbcType="INTEGER" property="scheduleNo" />
    <result column="schedule_key" jdbcType="VARCHAR" property="scheduleKey" />
    <result column="schedule_name" jdbcType="VARCHAR" property="scheduleName" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="schedule_type" jdbcType="INTEGER" property="scheduleType" />
    <result column="source_type" jdbcType="INTEGER" property="sourceType" />
    <result column="site_code" jdbcType="INTEGER" property="siteCode" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="yn" jdbcType="TINYINT" property="yn" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_erp" jdbcType="VARCHAR" property="createUserErp" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="update_user_erp" jdbcType="VARCHAR" property="updateUserErp" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
    <result column="old_start_time" jdbcType="VARCHAR" property="oldStartTime" />
    <result column="old_end_time" jdbcType="VARCHAR" property="oldEndTime" />
    <result column="valid_time" jdbcType="TIMESTAMP" property="validTime"/>
    <result column="invalid_time" jdbcType="TIMESTAMP" property="invalidTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, work_grid_key, schedule_no, schedule_key, schedule_name, start_time, end_time,
    schedule_type, source_type, site_code, area_code, yn, create_time, update_time, create_user_erp, create_user_name, update_user_erp,
    update_user_name, ts, old_start_time, old_end_time, valid_time, invalid_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from work_grid_schedule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from work_grid_schedule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jdl.basic.api.domain.schedule.WorkGridSchedule">
    insert into work_grid_schedule (id, work_grid_key,
      schedule_no, schedule_name, start_time,
      end_time, schedule_type, yn,
      create_time, update_time, create_user_erp,
      create_user_name, update_user_erp, update_user_name,
      ts)
    values (#{id,jdbcType=BIGINT}, #{workGridKey,jdbcType=VARCHAR},
      #{scheduleNo,jdbcType=INTEGER}, #{scheduleName,jdbcType=VARCHAR}, #{startTime,jdbcType=VARCHAR},
      #{endTime,jdbcType=VARCHAR}, #{scheduleType,jdbcType=INTEGER}, #{yn,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserErp,jdbcType=VARCHAR},
      #{createUserName,jdbcType=VARCHAR}, #{updateUserErp,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR},
      #{ts,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jdl.basic.api.domain.schedule.WorkGridSchedule">
    insert into work_grid_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="workGridKey != null">
        work_grid_key,
      </if>
      <if test="scheduleNo != null">
        schedule_no,
      </if>
      <if test="scheduleName != null">
        schedule_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="scheduleType != null">
        schedule_type,
      </if>
      <if test="yn != null">
        yn,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserErp != null">
        create_user_erp,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="updateUserErp != null">
        update_user_erp,
      </if>
      <if test="updateUserName != null">
        update_user_name,
      </if>
      <if test="ts != null">
        ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="workGridKey != null">
        #{workGridKey,jdbcType=VARCHAR},
      </if>
      <if test="scheduleNo != null">
        #{scheduleNo,jdbcType=INTEGER},
      </if>
      <if test="scheduleName != null">
        #{scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="scheduleType != null">
        #{scheduleType,jdbcType=INTEGER},
      </if>
      <if test="yn != null">
        #{yn,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserErp != null">
        #{createUserErp,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserErp != null">
        #{updateUserErp,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jdl.basic.api.domain.schedule.WorkGridSchedule">
    update work_grid_schedule
    <set>
      <if test="workGridKey != null">
        work_grid_key = #{workGridKey,jdbcType=VARCHAR},
      </if>
      <if test="scheduleNo != null">
        schedule_no = #{scheduleNo,jdbcType=INTEGER},
      </if>
      <if test="scheduleName != null">
        schedule_name = #{scheduleName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="scheduleType != null">
        schedule_type = #{scheduleType,jdbcType=INTEGER},
      </if>
      <if test="yn != null">
        yn = #{yn,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserErp != null">
        create_user_erp = #{createUserErp,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserErp != null">
        update_user_erp = #{updateUserErp,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="ts != null">
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jdl.basic.api.domain.schedule.WorkGridSchedule">
    update work_grid_schedule
    set
      work_grid_key = #{workGridKey,jdbcType=VARCHAR},
      schedule_no = #{scheduleNo,jdbcType=INTEGER},
      schedule_name = #{scheduleName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      schedule_type = #{scheduleType,jdbcType=INTEGER},
      yn = #{yn,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_erp = #{createUserErp,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_erp = #{updateUserErp,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      ts = #{ts,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="batchQueryByWorkGridKey" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from
        work_grid_schedule
    where
        yn = 1
    and work_grid_key in
    <foreach collection="workGridSchedules" item="item" separator="," open="(" close=")">
      #{item.workGridKey}
    </foreach>
  </select>

  <update id="batchDeleteByWorkGridKey">
    update
        work_grid_schedule
    set
        yn = 0,
        update_user_erp = #{updateUserErp},
        update_user_name = #{updateUserName},
        update_time = #{updateTime}
    where
        yn = 1
        and work_grid_key in
    <foreach collection="workGridSchedules" item="item" separator="," open="(" close=")">
      #{item.workGridKey}
    </foreach>
  </update>

  <update id="batchDeleteByScheduleKey">
    update      work_grid_schedule
    set         yn = 0,
                update_user_erp = #{updateUserErp},
                update_user_name = #{updateUserName},
                update_time = #{updateTime},
    <trim prefix="invalid_time = case schedule_key" suffix="end">
      <foreach collection="workGridSchedules" item="item">
        when #{item.scheduleKey} then #{item.invalidTime}
      </foreach>
    </trim>
    where       yn = 1
    and         schedule_key in
    <foreach collection="workGridSchedules" item="item" separator="," open="(" close=")">
      #{item.scheduleKey}
    </foreach>
  </update>

  <insert id="batchInsert">
    insert into work_grid_schedule
    (
        work_grid_key,
        schedule_no,
        schedule_key,
        schedule_name,
        start_time,
        end_time,
        schedule_type,
        source_type,
        site_code,
        area_code,
        create_time,
        update_time,
        create_user_erp,
        create_user_name,
        update_user_erp,
        update_user_name,
        old_start_time,
        old_end_time,
        valid_time,
        invalid_time
    )
    values
    <foreach collection="workGridSchedules" item="item" separator=",">
      (
        #{item.workGridKey},
        #{item.scheduleNo},
        #{item.scheduleKey},
        #{item.scheduleName},
        #{item.startTime},
        #{item.endTime},
        #{item.scheduleType},
        #{item.sourceType},
        #{item.siteCode},
        #{item.areaCode},
        #{item.createTime},
        #{item.updateTime},
        #{item.createUserErp},
        #{item.createUserName},
        #{item.updateUserErp},
        #{item.updateUserName},
        #{item.oldStartTime},
        #{item.oldEndTime},
        #{item.validTime},
        #{item.invalidTime}
      )
    </foreach>
  </insert>

  <select id="querySiteScheduleByCondition" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from
        work_grid_schedule
    where
        yn = 1
    and site_code = #{siteCode}
    <if test="areaCode != null and areaCode != ''">
    and area_code = #{areaCode}
    </if>
    <if test="workGridKey != null and workGridKey != ''">
    and work_grid_key = #{workGridKey}
    </if>
    and
        source_type <![CDATA[ <= ]]> #{sourceType}
  </select>

  <select id="queryWorkGridScheduleByKey" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
      work_grid_schedule
    WHERE
      schedule_key = #{scheduleKey}
      AND yn = 1
    limit 1
  </select>
  <select id="listWorkGridScheduleByKeys" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    work_grid_schedule
    WHERE
    schedule_key
    in
    <foreach collection="scheduleKeyList" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
    order by id desc
  </select>


  <select id="queryWorkGridScheduleByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    work_grid_schedule
    where
          work_grid_key = #{workGridKey}
          and schedule_name =#{scheduleName}
          and yn = 1
  </select>

  <update id="cleanWorkGridScheduleOldTime">
    update
        work_grid_schedule
    set
        old_start_time = #{oldStartTime},
        old_end_time = #{oldEndTime}
    where
        yn = 1
    and work_grid_key in
    <foreach collection="workGridKeys" item="item" separator="," open="(" close=")">
        #{item}
    </foreach>
  </update>

  <select id="queryTodayDeletedSiteSchedule" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from
        work_grid_schedule
    where
        yn = 0
    and site_code = #{siteCode}
    <if test="areaCode != null and areaCode != ''">
      and area_code = #{areaCode}
    </if>
    <if test="workGridKey != null and workGridKey != ''">
      and work_grid_key = #{workGridKey}
    </if>
    and
        source_type <![CDATA[ <= ]]> #{sourceType}
    and
        update_time <![CDATA[ >= ]]> #{updateTime}
    order by create_time asc
  </select>

  <select id="listAllScheduleIgnoreYn" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List"/>
    from    work_grid_schedule
    where   work_grid_key = #{workGridKey}
  </select>
</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jdl.basic.provider.core.dao.itBasic.ItBasicStorageIpRegionDao">
    <!-- table映射实体对象 -->
    <resultMap id="RM_ItBasicStorageIpRegion" type="com.jdl.basic.api.domain.itBasic.ItBasicStorageIpRegion">
        <result property="id" column="id"/>
        <result property="endIp" column="end_ip"/>
        <result property="startIp" column="start_ip"/>
        <result property="storageId" column="storage_id"/>
        <result property="yn" column="yn"/>
        <result property="ts" column="ts"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="Base_Column_List">
        `id`, `end_ip`, `start_ip`, `storage_id`, `yn`, `ts`
    </sql>

    <!-- 批量增加 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.jdl.basic.api.domain.itBasic.ItBasicStorageIpRegion">
        insert into `it_basic_storage_ip_region`(
        id,
        end_ip,
        start_ip,
        storage_id,
        yn,
        ts
        ) values (
                #{id},
                #{endIp},
                #{startIp},
                #{storageId},
                #{yn},
                #{ts}
                )
    </insert>
    <!-- 增加 -->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.jdl.basic.api.domain.itBasic.ItBasicStorageIpRegion">
        insert into `it_basic_storage_ip_region`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="endIp != null">
                end_ip,
            </if>
            <if test="startIp != null">
                start_ip,
            </if>
            <if test="storageId != null">
                storage_id,
            </if>
            <if test="yn != null">
                yn,
            </if>
            <if test="ts != null">
                ts,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="endIp != null">
                #{endIp},
            </if>
            <if test="startIp != null">
                #{startIp},
            </if>
            <if test="storageId != null">
                #{storageId},
            </if>
            <if test="yn != null">
                #{yn},
            </if>
            <if test="ts != null">
                #{ts},
            </if>
        </trim>
    </insert>
    <!-- 批量增加 -->
    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        insert into `it_basic_storage_ip_region`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            end_ip,
            start_ip,
            storage_id,
            yn,
            ts,
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix=" (" suffix=")" suffixOverrides=",">
                    #{item.id},
                    #{item.endIp},
                    #{item.startIp},
                    #{item.storageId},
                    #{item.yn},
                    #{item.ts},
            </trim>
        </foreach>
    </insert>
    <!-- 更新 -->
    <update id="updateByPrimaryKey" parameterType="com.jdl.basic.api.domain.itBasic.ItBasicStorageIpRegion">
        UPDATE `it_basic_storage_ip_region`
        <set>
            <if test="endIp != null ">
            end_ip = #{endIp},
            </if>
            <if test="startIp != null ">
            start_ip = #{startIp},
            </if>
            <if test="storageId != null ">
            storage_id = #{storageId},
            </if>
            <if test="yn != null ">
            yn = #{yn},
            </if>
            <if test="ts != null ">
            ts = #{ts}
            </if>
        </set>
        WHERE
            id = #{id}
    </update>
    <!-- 批量更新 -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index"  separator=";">
            UPDATE `it_basic_storage_ip_region`
            <set>
                <if test="item.endIp != null">
                end_ip = #{item.endIp},
                </if>
                <if test="item.startIp != null">
                start_ip = #{item.startIp},
                </if>
                <if test="item.storageId != null">
                storage_id = #{item.storageId},
                </if>
                <if test="item.yn != null">
                yn = #{item.yn},
                </if>
                <if test="item.ts != null">
                ts = #{item.ts}
                </if>
            </set>
            WHERE
                id = #{item.id}
        </foreach>
    </update>
    <!-- 按主键查询 -->
    <select id="selectByPrimaryKey" resultMap="RM_ItBasicStorageIpRegion" parameterType="com.jdl.basic.api.domain.itBasic.ItBasicStorageIpRegion">
        SELECT
        <include refid="Base_Column_List"/>
        <![CDATA[
            FROM `it_basic_storage_ip_region`
            WHERE
                id = #{id} 
        ]]>
    </select>
    <!-- 按条件查询单条记录 -->
    <select id="selectOne" resultMap="RM_ItBasicStorageIpRegion" parameterType="com.jdl.basic.api.dto.itBasic.qo.ItBasicStorageIpRegionQo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `it_basic_storage_ip_region`
        <include refid="where"/>
    </select>
    <!-- where条件 -->
    <sql id="where">
        <where>
            <include refid="sql_if_not_null"/>
        </where>
    </sql>
    <!-- 判断空值 -->
    <sql id="sql_if_not_null">
        <if test="id != null">
        AND id = #{id}
        </if>
        <if test="endIp != null">
        AND end_ip = #{endIp}
        </if>
        <if test="startIp != null">
        AND start_ip = #{startIp}
        </if>
        <if test="storageId != null">
        AND storage_id = #{storageId}
        </if>
        <if test="yn != null">
        AND yn = #{yn}
        </if>
    </sql>
    <!-- 查询行数 -->
    <select id="queryCount" resultType="long" parameterType="com.jdl.basic.api.dto.itBasic.qo.ItBasicStorageIpRegionQo">
        SELECT count(1) FROM `it_basic_storage_ip_region`
        <include refid="where"/>
    </select>
    <!-- 查询集合 如果pageNumber小于或等于0,则不进行分页操作 -->
    <select id="queryList" resultMap="RM_ItBasicStorageIpRegion" parameterType="com.jdl.basic.api.dto.itBasic.qo.ItBasicStorageIpRegionQo">
        SELECT
        <include refid="Base_Column_List" />
        FROM `it_basic_storage_ip_region`
        <include refid="where"/>
        <if test="pageNumber > 0">
            limit #{limitStart}, #{pageSize}
        </if>
    </select>
    <!-- 伪删除（更新删除行的识别码） -->
    <update id="deleteByPrimaryKey" parameterType="com.jdl.basic.api.domain.itBasic.ItBasicStorageIpRegion">
        UPDATE `it_basic_storage_ip_region` SET yn = 1
        WHERE
        id = #{id} 
    </update>
    <!-- 批量伪删除 -->
    <update id="batchDelete" parameterType="com.jdl.basic.api.dto.itBasic.qo.ItBasicStorageIpRegionQo">
        UPDATE `it_basic_storage_ip_region` SET yn = 1
        WHERE id IN
        <foreach collection="columnValueList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 根据IP查询匹配的区域信息 -->
    <select id="selectMatchRegionByIp" resultMap="RM_ItBasicStorageIpRegion" parameterType="com.jdl.basic.api.dto.itBasic.po.ItBasicIpRegionPo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `it_basic_storage_ip_region`
        where inet_aton(#{ip}) &gt;= start_ip
        and inet_aton(#{ip}) &lt;= end_ip
        <if test="yn != null">
            AND yn = #{yn}
        </if>
        <if test="yn == null">
            AND yn = 1
        </if>
        limit 1
    </select>
</mapper>

